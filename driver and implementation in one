/*quick sort algorithm */

//Read Quick Sort Algorithm from wikipedia
/*
The code is close but it has some errors so it is not doing
what it is supposed to do. Read the Quick Sort Algorithm
and debug the code to print the correct output.

Also write the code for reading the numbers from the file "input.txt"
provided in the folder "prob2"
NOTE:- DO NOT hardcode the size of the file . Create a constant variable
max_length = 200, which will be the maximum size of the file.
//---------------------------------------------------------------
NOTE: DO NOT ADD ANY COUT STATEMENTS IN THE FINAL SUBMISSION
OF THE CODE. ALSO, DO NOT MODIFY THE SEQUENCE OF THE INPUT, OR
CHANGE THE INPUT
//---------------------------------------------------------------
*/

#include <cstdlib>
#include <iostream>
#include <fstream>
using namespace std;

const int max_length=200;

void quick_sort(int arr[], int low, int high);
int partition (int arr[], int low, int high);
void swap (int arr[], int i, int j);
void print_array(int array[], int low, int hi);



	int main()
	{

        int n=0;//setting the total size of numbers the file input.txt to 0
        int file;//a temparory variable for storing the numbers inside of input.txt
        int array[max_length];//declare an array of size n
		//DECLARE YOUR ARRAY HERE?:

        ifstream myfile;
        myfile.open("input.txt");//open the text file input.txt
        while(myfile>>file)
        {
        n++;//while a number copies to file, the counter n adds 1, so at the end it will give the total size in input.txt
        }
        myfile.close();//close the myfile to refresh
        myfile.open("input.txt");//open the text file input.txt again

        for (int i = 0; i < n; i++)// copies all the values of input.txt into an array
        {
            myfile >> array[i];
        }


				//INSERT YOUR CODE HERE - TO READ THE NUMBERS FROM "input.txt" and store it in an array

		//print_array(array,low,size);

		quick_sort(array, 0, n-1);//quicksorts the array from element 0 to element the size-1
        print_array(array,0,n-1);//prints the array from element 0 to element the size-1

		return 0;
	}//end of main

void print_array(int array[], int low, int high)//original code high was hi
{
	cout<< "quick sort partition steps: ";
	for (int j=low; j<=high;j++)
		cout <<" "<< array[j];
	cout << endl;
}//end of print_array


void swap (int arr[], int i, int j)//original did not have a temporary variable to swap in between
{
    int c;
	c = arr[i];
	arr[i] = arr[j];
	arr[j] = c;

	return;
}
int partition (int arr[], int low, int high)//change hi to high
{
	int pivot = arr[high];
	int i = low;

	for (int j = low; j<high; j++)//change hi to high
	{
		if (arr[j] <= pivot)
		{

			swap(arr, i, j );
			i++;

		}
	}
    print_array(arr, low, high);
	swap(arr, i, high);

	return i;
}

void quick_sort(int arr[], int low, int high)
{
	int pivot;//missing ;

	if (low < high)//change hi to high
	{
		pivot = partition(arr, low, high);
		quick_sort(arr, low, pivot-1);
		quick_sort(arr, pivot+1, high);
	}

	return;
}

